#Author CptR3dBeard
#Description
# This is a an API that will talk with my python code and perform data analytics models
# on a dataset stored within MongoDB. The goal is to enable a user to get the predictions from 3 different models
# of regression and return them to the screen as a list for the user to do as they wish.

#Imported and Used Libraries
from fastapi import FastAPI, UploadFile, File
from fastapi.responses import HTMLResponse
from main import *

app = FastAPI()                             # defining app for FastAPI

@app.get('/', response_class=HTMLResponse)  # This is our landing page that will tell the user                     
def index():                                # the useable parameters and a small description
                                            # of what the API is capable of.
    return  """                             
    <html>
        <head>
            <title>Data Apiüòç</title>
        </head>
        <body>
            <h1>This is a landing page for CptR3dBeards DataAnalytics API</h1>
            <h2>Enter /LinearRegression in URL to perform LinearRegression on Microsoft Dataset<br>
            Enter /RidgeRegression in URL to perform RidgeRegression on Microsoft Dataset</h1>
            <h3> This API takes a dataset from a locallly hosted MongoDB and performs different methods<br>
            of data analytics on it to give the user their desired outcome.</h3>
        </body>
    </html>
    """  
@app.post('/UploadFile/')
def create_upload_file(file: UploadFile = File(...)):
    return insert_new_dataset(file.file)

@app.get('/LinearRegression')               #Get request that returns Linear Regression outcome
def request_for_linear_regression():        #That is generated by our linear regression model
    return LinearR()                        #That we imported from main.py

@app.get('/RidgeRegression')                #Get request that return Ridge Regression outcome
def request_for_linear_regression():        #That is generated by the ridge regression model
    return Ridge_Regression()               # we have imported from main.py
